<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Brian&#39;s Dev Dumping Ground</title>
    <link>https://inspiring-nightingale-7b6b8b.netlify.app/posts/</link>
    <description>Recent content in Posts on Brian&#39;s Dev Dumping Ground</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 19 May 2021 13:56:31 +0000</lastBuildDate><atom:link href="https://inspiring-nightingale-7b6b8b.netlify.app/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Learnings for May 19</title>
      <link>https://inspiring-nightingale-7b6b8b.netlify.app/posts/05-2021/may19-2021/</link>
      <pubDate>Wed, 19 May 2021 13:56:31 +0000</pubDate>
      
      <guid>https://inspiring-nightingale-7b6b8b.netlify.app/posts/05-2021/may19-2021/</guid>
      <description>  cool way to map query elements into function handlers
 return [ ...document.querySelectorAll(`[{some-property}]`) ].map(this.toComponent.bind(this))    css - how to do wavy line
 text-decoration: plum underline wavy;    </description>
    </item>
    
    <item>
      <title>Django Compressor and GCP</title>
      <link>https://inspiring-nightingale-7b6b8b.netlify.app/posts/05-2021/may13-2021/</link>
      <pubDate>Thu, 13 May 2021 14:32:03 +0000</pubDate>
      
      <guid>https://inspiring-nightingale-7b6b8b.netlify.app/posts/05-2021/may13-2021/</guid>
      <description>Background  ./manage compress -f runs through your templates using COMPRESS_OFFLINE_CONTEXT to populate template variables that lie within @compress template tags. when it finds a resource that needs to be included inline, it uses the path to the resource as a manifest key and uses the file contents as the &amp;lsquo;value&amp;rsquo;. This is all stored in manifest.json it also takes other resources that are not inline and compreses them into hashed file names in the CACHE folder  issue in GCP  depending on configuration, gloud will append querystring auth params to your resource as a link in the template at runtime  this happens at runtime - so the template tag compress might be looking for href=&amp;lsquo;foo.</description>
    </item>
    
    <item>
      <title>May7 2021</title>
      <link>https://inspiring-nightingale-7b6b8b.netlify.app/posts/05-2021/may7-2021/</link>
      <pubDate>Fri, 07 May 2021 20:05:33 +0000</pubDate>
      
      <guid>https://inspiring-nightingale-7b6b8b.netlify.app/posts/05-2021/may7-2021/</guid>
      <description> bizarre node-gyp errors and incompatibility issues with node-sass  use nvm and changed version to 12.13    </description>
    </item>
    
    <item>
      <title>Learnings - May 6 2021</title>
      <link>https://inspiring-nightingale-7b6b8b.netlify.app/posts/may-6-2021/</link>
      <pubDate>Thu, 06 May 2021 14:28:07 +0000</pubDate>
      
      <guid>https://inspiring-nightingale-7b6b8b.netlify.app/posts/may-6-2021/</guid>
      <description> firebase vs amplify - both simplify cloud app dev with deploy, cicd, storage,auth featurees.  amplify is aws, firebase is google   vscode shortcuts ( windows keyboard on mac )  alt j - toggle terminal alt b - toggle explorer window,shift, o - remove unused imports   hugo supports tags, categories out of the box show hidden file on finder(mac) - alt-shift   </description>
    </item>
    
    <item>
      <title>First Post</title>
      <link>https://inspiring-nightingale-7b6b8b.netlify.app/posts/my-first-post/</link>
      <pubDate>Wed, 05 May 2021 14:04:09 +0000</pubDate>
      
      <guid>https://inspiring-nightingale-7b6b8b.netlify.app/posts/my-first-post/</guid>
      <description>Learning hugo and netlify</description>
    </item>
    
  </channel>
</rss>
